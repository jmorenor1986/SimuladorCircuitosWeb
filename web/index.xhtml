<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:p="http://primefaces.org/ui">

    <h:head>

        <script>

            function getMousePos(canvas, evt) {
                var rect = canvas.getBoundingClientRect();
                return {
                    x: evt.clientX - rect.left,
                    y: evt.clientY - rect.top
                };
            }
            function click() {
                canvas = document.getElementById("myCanvas");
                canvas.addEventListener("click",
                        function (e) {
                            var mousePos = getMousePos(canvas, e);
                            document.getElementById("formulario:hiddenX").value = mousePos.x;
                            document.getElementById("formulario:hiddenY").value = mousePos.y;
                            dibujar();
                        }
                , false);
            }

            function paint(image, varX, varY, varX1, varY1) {
                canvas = document.getElementById("myCanvas");
                var context = canvas.getContext('2d');
                if (image != 'linea') {
                    var imageObj = new Image();
                    imageObj.onload = function () {
                        context.drawImage(imageObj, varX, varY);
                    };
                    imageObj.src = '#{request.contextPath}/resources/images/' + image;
                } else {
                    paintLine(varX, varY, varX1, varY1);
                }
            }
            function paintLine(varX, varY, varX1, varY1) {
                canvas = document.getElementById("myCanvas");
                var ctx = canvas.getContext("2d");
                ctx.moveTo(varX, varY);
                ctx.lineTo(varX1, varY1);
                ctx.strokeStyle = '#000000';
                ctx.stroke();
            }
            function repaintCanvas() {
                canvas = document.getElementById("myCanvas");
                var context = canvas.getContext('2d');
                context.clearRect(0, 0, canvas.width, canvas.height);
            }
        </script>
        <title>Simulador Circuitos</title>
    </h:head>
    <h:body onload="click();">
        <h:form id="formulario" style="background:url(#{request.contextPath}/resources/images/apuntes.jpg);width: 2000" >
            <p:remoteCommand name="dibujar"  actionListener="#{modelo.dibujaComponente}" />
            <b:navBar brand="Simulador Circuitos" brandHref="#" inverse="true">
                <p:commandLink value="SIMULAR" actionListener="#{modelo.validaFormaCircuito}" class="btn btn-success" style="color:white"/>
                <p:commandLink value="DESHACER" actionListener="#{modelo.deshacer}" class="btn btn-success" style="color:white"/>
                <p:commandLink value="NUEVO" actionListener="#{modelo.nuevoLienzo}" class="btn btn-success" style="color:white"/>
            </b:navBar>
            <center>

                <p:outputLabel  value="#{modelo.titulo}"/>
                <p:panelGrid columns="2">
                    <p:column>
                        <p:panelGrid columns="1" style="background-color: black">

                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto1')}">
                                <h:graphicImage value="resources/images/objeto1.png" />
                            </p:commandLink>
                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto2')}">
                                <h:graphicImage value="resources/images/objeto2.png" />
                            </p:commandLink>
                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto3')}">
                                <h:graphicImage value="resources/images/objeto3.png" />
                            </p:commandLink>
                            <p:commandLink actionListener="#{modelo.seleccionaComponente('objeto4')}">
                                <h:graphicImage value="resources/images/objeto4.png" />
                            </p:commandLink>
                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto5')}">
                                <h:graphicImage value="resources/images/objeto5.png" />
                            </p:commandLink>
                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto6')}">
                                <h:graphicImage value="resources/images/objeto6.png" />
                            </p:commandLink>
                            <p:commandLink  actionListener="#{modelo.seleccionaComponente('objeto7')}">
                                <h:graphicImage value="resources/images/objeto7.png" />
                            </p:commandLink>
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                            <p:spacer />
                        </p:panelGrid>    
                    </p:column>
                    <p:column>
                        <canvas id="myCanvas" width="800"  height="600" style="background:url(#{request.contextPath}/resources/images/cuaderno.jpg)">
                        </canvas>
                    </p:column>
                    <p:column>
                        <p:outputLabel value="Log" />
                    </p:column>
                    <p:column>
                        <p:messages id="messages"  showDetail="true" autoUpdate="true" closable="true" /> 
                    </p:column>
                </p:panelGrid>
            </center>
            <h:inputHidden value="#{modelo.valorX}" id="hiddenX" />
            <h:inputHidden value="#{modelo.valorY}" id="hiddenY" />
            <p:spacer height="800"/>
            <p:spacer />
            <p:spacer />
            <p:spacer />
            <p:spacer />
            <p:spacer />
            <p:spacer />
            <p:spacer />
            <p:spacer />
        </h:form>
    </h:body>
</html>

